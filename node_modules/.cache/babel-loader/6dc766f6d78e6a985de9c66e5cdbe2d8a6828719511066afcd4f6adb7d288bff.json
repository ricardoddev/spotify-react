{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\csamp\\\\Documents\\\\GitHub\\\\spotify-react\\\\src\\\\components\\\\AddPlaylist.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from \"axios\";\nimport ButtonBack from \"./ButtonBack\";\nimport { useState } from \"react\";\nimport ButtonCreate from \"./ButtonCreate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddPlaylist = () => {\n  _s();\n  const [titulo, setTitulo] = useState('');\n  const [capa, setCapa] = useState('../arqvsMock/');\n  const [musicas, setMusicas] = useState([]);\n  //axios.post\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const newPlaylist = {\n      titulo,\n      capa,\n      musicas\n    };\n    axios.post('http://localhost:3001/playlists', newPlaylist).then(res => {\n      setTitulo('');\n      setCapa(\"\");\n      setMusicas([]);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"bgPadrao\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Criar playlist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"formAddPlaylist\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"titulo\",\n        children: \"T\\xEDtulo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"titulo\",\n        type: \"text\",\n        name: \"titulo\",\n        value: titulo,\n        onChange: e => setTitulo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"capa\",\n        children: \"Foto da capa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"capa\",\n        type: \"text\",\n        name: \"capa\",\n        value: capa,\n        onChange: e => setCapa(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 55\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"centralizar\",\n        children: [/*#__PURE__*/_jsxDEV(ButtonBack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonCreate, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(AddPlaylist, \"W7QGpjW8xqBtxwls1X+aUlK8FBQ=\");\n_c = AddPlaylist;\nexport default AddPlaylist;\nvar _c;\n$RefreshReg$(_c, \"AddPlaylist\");","map":{"version":3,"names":["React","axios","ButtonBack","useState","ButtonCreate","jsxDEV","_jsxDEV","AddPlaylist","_s","titulo","setTitulo","capa","setCapa","musicas","setMusicas","handleSubmit","e","preventDefault","newPlaylist","post","then","res","class","children","fileName","_jsxFileName","lineNumber","columnNumber","id","onSubmit","for","type","name","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/csamp/Documents/GitHub/spotify-react/src/components/AddPlaylist.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport ButtonBack from \"./ButtonBack\";\r\nimport { useState } from \"react\";\r\nimport ButtonCreate from \"./ButtonCreate\";\r\n\r\nconst AddPlaylist = () => {\r\n    const [titulo, setTitulo] = useState('')\r\n    const [capa, setCapa] = useState('../arqvsMock/')\r\n    const [musicas, setMusicas] = useState([])\r\n    //axios.post\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n    \r\n        const newPlaylist = { titulo, capa, musicas};\r\n\r\n        axios.post('http://localhost:3001/playlists', newPlaylist).then( (res) => {\r\n        setTitulo('');\r\n        setCapa(\"\");\r\n        setMusicas([])\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div class=\"bgPadrao\">\r\n            <h1>Criar playlist</h1>\r\n            <form id='formAddPlaylist' onSubmit={handleSubmit}>\r\n                <label for=\"titulo\">TÃ­tulo</label><input id='titulo' type=\"text\" name=\"titulo\" value={titulo} onChange={(e) => setTitulo(e.target.value)}/>\r\n                <label for=\"capa\">Foto da capa</label><input id='capa' type=\"text\" name=\"capa\" value={capa} onChange={(e) => setCapa(e.target.value)}/>\r\n                <div class=\"centralizar\">\r\n                    <ButtonBack />\r\n                    <ButtonCreate onClick={handleSubmit}/>\r\n                </div>            \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPlaylist"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}